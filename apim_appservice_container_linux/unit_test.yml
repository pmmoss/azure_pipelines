stages:
- stage: Unit_Test  
  displayName: 'Unit Tests'
  pool: Default
    #vmImage: $(vmImageName)
  jobs:
  - job: Test
    displayName: 'JobName: Test'
    variables:
    - name: 'buildConfiguration'
      value: 'Release'
    steps:  
    - task: UseDotNet@2
      displayName: 'Use .net 5.0.x'
      inputs:
        version: '5.0.x'
        includePreviewVersions: true
        
    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet 5.8.0'
      inputs: 
        versionSpec: '5.8.0'

    - task: NuGetAuthenticate@0
      displayName: 'Authenticate to Gauge Artifacts'

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'gaugetelematics'
        scannerMode: 'MSBuild'
        projectKey: $(SonarProjectKey)
        projectName: $(SonarProjectName)
        extraProperties: |
          sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/*.xml
          sonar.cs.vstest.reportsPaths=$(Build.SourcesDirectory)/**/*.trx
          
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: restore
        projects: '$(Build.SourcesDirectory)/**/*.csproj'
        feedsToUse: 'select'
        vstsFeed: 'REDACTED'

    - task: DotNetCoreCLI@2
      displayName: dotnet test
      inputs:
        command: test
        testRunTitle: $(Build.Repository.Name)
        arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx --collect:"XPlat Code Coverage"' 
        projects: '$(Build.SourcesDirectory)/**/*.csproj'
        publishTestResults: true
        nobuild: false
   
    - script: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/Coverage/HTML -reporttypes:Html;Cobertura
      displayName: 'Create Code coverage report'

    # Publish the code coverage result (summary and web site)
    # The summary allows to view the coverage percentage in the summary tab
    # The web site allows to view which lines are covered directly in Azure Pipeline
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage'
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(Build.SourcesDirectory)/Coverage/HTML/Cobertura.xml'

    - task: SonarCloudAnalyze@1

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
        
#  - job: OWASP_Scan
#    displayName: OWASP_Dependancy_Scan
#    pool:
#      vmImage: 'windows-latest'
#    steps:
#    - task: dependency-check-build-task@5
#      inputs:
#        projectName: 'OWASP'
#        scanPath: '**/*'
#        format: 'HTML'
#        reportsDirectory: '$(System.DefaultWorkingDirectory)'
#        enableExperimental: true
#        additionalArguments: '--advancedHelp'